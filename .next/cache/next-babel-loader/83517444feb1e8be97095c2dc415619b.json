{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/juanjo/Documents/programming/js/react/react-designing-components/code/src/components/Speakers/Speakers.js\",\n    _this = this;\n\nimport React from 'react';\nimport WithData from 'WithData';\n\nvar Speakers = function Speakers(_ref) {\n  var speakers = _ref.speakers;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: speakers.map(function (_ref2) {\n      var imgSrc = _ref2.imgSrc,\n          name = _ref2.name;\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/images/\".concat(imgSrc),\n        alt: name\n      }, imgSrc, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 24\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, _this);\n};\n\n_c = Speakers;\nexport default _c2 = WithData(Speakers);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Speakers\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/juanjo/Documents/programming/js/react/react-designing-components/code/src/components/Speakers/Speakers.js"],"names":["React","WithData","Speakers","speakers","map","imgSrc","name"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,UAArB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAgB;AAAA,MAAdC,QAAc,QAAdA,QAAc;AAC7B,sBACI;AAAA,cACKA,QAAQ,CAACC,GAAT,CAAa,iBAAoB;AAAA,UAAlBC,MAAkB,SAAlBA,MAAkB;AAAA,UAAVC,IAAU,SAAVA,IAAU;AAC9B,0BAAO;AAAK,QAAA,GAAG,oBAAaD,MAAb,CAAR;AAA4C,QAAA,GAAG,EAAEC;AAAjD,SAAoCD,MAApC;AAAA;AAAA;AAAA;AAAA,eAAP;AACH,KAFA;AADL;AAAA;AAAA;AAAA;AAAA,WADJ;AAOH,CARD;;KAAMH,Q;AASN,qBAAeD,QAAQ,CAACC,QAAD,CAAvB","sourcesContent":["import React from 'react';\nimport WithData from 'WithData';\n\nconst Speakers = ({speakers}) => {\n    return (\n        <div>\n            {speakers.map(({imgSrc, name}) => {\n                return <img src={`/images/${imgSrc}`} key={imgSrc} alt={name}/>;\n            })}\n        </div>\n    );\n}\nexport default WithData(Speakers);"]},"metadata":{},"sourceType":"module"}